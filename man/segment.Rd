% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/segment.R
\name{segment}
\alias{segment}
\title{Cut long string into overlapping segments}
\usage{
segment(x, max_len = 7990L, overlap = 500L)
}
\arguments{
\item{x}{A string (length-one character vector) to process.}

\item{max_len}{An \code{integer} value. The text passed to DBpedia Spotlight may
not exceed a defined length. If it does, an HTTP error results. The known
threshold (less than 8000 characters) explains the default value of 7990.
Note that the basis for evaluating the number of characters is the string
escaped for creating the API request URL (using \code{curl::curl_escape()}),
which will usually be significantly longer than the unescaped string.}

\item{overlap}{Number of overlapping characters.}
}
\value{
A named character vector. The names are integer numbers that indicate
the character offset from the original string.
}
\description{
Strings that are too long to be processed by DBpedia Spotlight are cut into
overlapping segments that can be processed. Overlaps ensure that contextual
information is available for all entities.
}
\examples{
library(polmineR)
use("RcppCWB") # make REUTERS corpus available

article <- corpus("REUTERS") \%>\%
  subset(id == "236") \%>\% # the longest article in the REUTERS corpus
  get_token_stream(p_attribute = "word", collapse = " ")

segs <- segment(x = article, max_len = 500, overlap = 100)
}
