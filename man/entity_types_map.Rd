% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entity_types.R
\name{entity_types_map}
\alias{entity_types_map}
\alias{entity_types_map,character-method}
\alias{entity_types_map,data.table-method}
\title{Map types returned by DBpedia Spotlight to a limited set of categories}
\usage{
entity_types_map(x, ...)

\S4method{entity_types_map}{character}(x, mapping_vector, other = "MISC", verbose = TRUE)

\S4method{entity_types_map}{data.table}(x, mapping_vector, other = "MISC", verbose = TRUE)
}
\arguments{
\item{x}{Either a \verb{character vector} of types or a \code{data.table} returned by
\code{get_dbpedia_uris()}.}

\item{...}{Further arguments.}

\item{mapping_vector}{A \verb{named character vector} with desired category names
(as names) and types from the DBpedia ontology as values. If \code{x} is a
character vector of types, the mapping should correspond to types in the
character vector, such as c("LOCATION" = "Place") in which the type "Place"
is mapped to the category "LOCATION". If \code{x} is the entire \code{data.table}
returned by \code{get_dbpedia_uris()}, then the source of the type (i.e.
"DBpedia" or "Wikidata") should be provided in the format c("LOCATION" =
"DBpedia:Place"). This indicates the column(s) which should be used in the
comparison. This can contain more than one pair of class and type.}

\item{other}{A \verb{character vector} with the name of the class of all types not
matched by the \code{mapping_vector}.}

\item{verbose}{A \code{logical} value - whether to display messages.}
}
\value{
If the input is a \code{data.table} the function adds categories to the
input data.table by reference. Otherwise, a \verb{character vector} is returned.
}
\description{
This function takes the output of \code{get_dbpedia_uris()} and compares values in
the different \code{types} columns such as "DBpedia_type" with a named character
vector. The main purpose of this function is to reduce the number of types to
a limited set of categories.
}
\details{
If there is more than one match between the retrieved types and the
\verb{mapping vector}, unique categories are sorted alphabetically and
collapsed.
}
\examples{
library(quanteda)

inaugural_paragraphs <- data_corpus_inaugural \%>\%
  corpus_subset(Year == 2009) \%>\% # limit to Barack Obama 2009
  corpus_reshape(to = "paragraphs")

uritab_paragraphs <- get_dbpedia_uris(
  x = inaugural_paragraphs[2], # single paragraph
  language = "en",
  max_len = 5600L,
  confidence = 0.5,
  api = "http://api.dbpedia-spotlight.org/en/annotate",
  verbose = FALSE,
  progress = TRUE
)

mapping_vector_character = c(
  "PERSON" = "Person",
  "ORGANIZATION" = "Organisation",
  "LOCATION" = "Place"
)

categories <- entity_types_map(
  uritab_paragraphs[["DBpedia_type"]],
  mapping_vector = mapping_vector_character
)

# For the entire data.table and multiple types sources:

mapping_vector_dt = c(
  "PERSON" = "DBpedia:Person",
  "ORGANIZATION" = "DBpedia:Organisation",
  "ORGANIZATION" = "Wikidata:7278",
  "LOCATION" = "DBpedia:Place"
)

entity_types_map(
  uritab_paragraphs,
  mapping_vector = mapping_vector_dt
)
}
